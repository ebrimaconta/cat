[{"C:\\localhost\\cat\\src\\domain\\Main.tsx":"1","C:\\localhost\\cat\\src\\index.js":"2","C:\\localhost\\cat\\src\\reducers\\VotesReducers.tsx":"3","C:\\localhost\\cat\\src\\actions\\ActionsGetVotes.tsx":"4","C:\\localhost\\cat\\src\\domain\\Upload\\Upload.tsx":"5","C:\\localhost\\cat\\src\\reducers\\FavReducers.tsx":"6","C:\\localhost\\cat\\src\\actions\\Fav\\ActionsFavPostDel.tsx":"7","C:\\localhost\\cat\\src\\App.tsx":"8","C:\\localhost\\cat\\src\\actions\\ActionsVoteUpDown.tsx":"9","C:\\localhost\\cat\\src\\reducers\\Root\\RootReducers.tsx":"10","C:\\localhost\\cat\\src\\actions\\Fav\\ActionsFav.tsx":"11","C:\\localhost\\cat\\src\\reportWebVitals.js":"12","C:\\localhost\\cat\\src\\actions\\ActionsGetCats.tsx":"13"},{"size":4600,"mtime":1612467565101,"results":"14","hashOfConfig":"15"},{"size":634,"mtime":1612351114892,"results":"16","hashOfConfig":"15"},{"size":557,"mtime":1612369676732,"results":"17","hashOfConfig":"15"},{"size":1195,"mtime":1612467081779,"results":"18","hashOfConfig":"15"},{"size":1585,"mtime":1612468170187,"results":"19","hashOfConfig":"15"},{"size":543,"mtime":1612462273658,"results":"20","hashOfConfig":"15"},{"size":1288,"mtime":1612466282982,"results":"21","hashOfConfig":"15"},{"size":595,"mtime":1612272793385,"results":"22","hashOfConfig":"15"},{"size":1425,"mtime":1612467229311,"results":"23","hashOfConfig":"15"},{"size":219,"mtime":1612460898943,"results":"24","hashOfConfig":"15"},{"size":1183,"mtime":1612465188211,"results":"25","hashOfConfig":"15"},{"size":362,"mtime":1611672374201,"results":"26","hashOfConfig":"15"},{"size":1187,"mtime":1612352749171,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"13hjhck",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\localhost\\cat\\src\\domain\\Main.tsx",["56","57"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchGetCatsFn } from '../actions/ActionsGetCats';\r\nimport { fetchGetVotesFn } from '../actions/ActionsGetVotes';\r\nimport { fetchFavFn } from '../actions/Fav/ActionsFav';\r\nimport { deleteFav, postFav } from '../actions/Fav/ActionsFavPostDel';\r\nimport { postVotesUp, postVotesDown } from '../actions/ActionsVoteUpDown';\r\nimport ReactLoading from 'react-loading';\r\n\r\ninterface Display {\r\n  dispatch: any;\r\n  cats: Cats;\r\n  votes: Votes;\r\n  favs: {\r\n    fetchFavs: any;\r\n  };\r\n}\r\ninterface Votes {\r\n  fetchvotes: any;\r\n}\r\ninterface Cats {\r\n  fetchcats: any;\r\n  length: number;\r\n}\r\ninterface IMain {}\r\n\r\ntype Props = Display;\r\n\r\nfunction Main(props: Props) {\r\n  const [mount, setMount] = useState(false);\r\n  setTimeout(() => {\r\n    if (!mount) {\r\n      setMount(true);\r\n    }\r\n  }, 1600);\r\n\r\n  useEffect(() => {\r\n    props.dispatch(fetchGetCatsFn());\r\n    props.dispatch(fetchGetVotesFn());\r\n    props.dispatch(fetchFavFn());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const favoriteFn = (imageId: string, isInFav: any) => {\r\n    if (isInFav) {\r\n      props.dispatch(deleteFav(isInFav));\r\n    } else {\r\n      props.dispatch(postFav(imageId));\r\n    }\r\n  };\r\n  const voteUp = (imageId: any) => {\r\n    props.dispatch(postVotesUp(imageId));\r\n  };\r\n\r\n  const voteDown = (imageId: any) => {\r\n    props.dispatch(postVotesDown(imageId));\r\n  };\r\n  const getAddedVotes = () => {\r\n    if (props.votes.fetchvotes) {\r\n      let getAddedVotesVar = props.votes.fetchvotes.find(\r\n        (favId: any) => favId.sub_id === 'votes'\r\n      );\r\n\r\n      return getAddedVotesVar;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=' '>\r\n        <div className=''>\r\n          <div className='flex  justify-center text-lg my-5'>\r\n            <Link\r\n              className='bg-black w-48 text-center text-white '\r\n              to='/Upload'\r\n            >\r\n              Upload Cat Image\r\n            </Link>\r\n            <div className='ml-2'>Cats</div>\r\n          </div>\r\n          <div className='flex justify-center'>\r\n            <div className='flex flex-wrap  lg:grid lg:grid-cols-4 w-11/12 '>\r\n              {mount ? (\r\n                props.cats.fetchcats.map((cat: any, index: any) => {\r\n                  let getImgValues = props.favs?.fetchFavs.find(\r\n                    (favId: any) =>\r\n                      favId.sub_id === 'Fav' && favId.image_id === cat.id\r\n                  );\r\n\r\n                  return (\r\n                    <React.Fragment key={index}>\r\n                      <div className='flex flex-col ml-4 lg:ml-1'>\r\n                        <div className=''>\r\n                          <img src={cat.url} alt='' className='h-60 w-80' />\r\n                        </div>\r\n                        <div className='my-3    '>\r\n                          <i\r\n                            className={`${\r\n                              getImgValues ? 'fas fa-heart ' : 'far fa-heart '\r\n                            }   text-4xl  heart-icons`}\r\n                            onClick={() => {\r\n                              favoriteFn(cat.id, getImgValues);\r\n                            }}\r\n                          ></i>\r\n                          <i\r\n                            onClick={() => {\r\n                              voteUp(cat.id);\r\n                            }}\r\n                            className='far fa-arrow-alt-circle-up text-4xl ml-3'\r\n                          ></i>\r\n                          <i\r\n                            onClick={() => {\r\n                              voteDown(cat.id);\r\n                            }}\r\n                            className='far fa-arrow-alt-circle-down text-4xl  ml-3'\r\n                          ></i>\r\n                          <div className='text-xl'>\r\n                            Number of Votes <div className=''> </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </React.Fragment>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className='flex   justify-center '>\r\n                  <ReactLoading type={'spinningBubbles'} color='black' />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  cats: state.cats,\r\n  votes: state.votes,\r\n  error: state.error,\r\n  favs: state.fav,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","C:\\localhost\\cat\\src\\index.js",[],"C:\\localhost\\cat\\src\\reducers\\VotesReducers.tsx",[],"C:\\localhost\\cat\\src\\actions\\ActionsGetVotes.tsx",[],"C:\\localhost\\cat\\src\\domain\\Upload\\Upload.tsx",["58","59","60","61"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\ninterface IUpload {}\r\n\r\ninterface IForm {\r\n  selectedFile: any;\r\n  name?: any;\r\n}\r\nconst Upload: React.FunctionComponent<IUpload> = (props) => {\r\n  const [selected, setUpload] = useState<IForm>({\r\n    selectedFile: null,\r\n  });\r\n  const [file, setFile] = useState<File>({} as File);\r\n\r\n  let image_name = '';\r\n\r\n  const onFileChange = (e: any) => {\r\n    const files = e.target.files;\r\n    if (files[0] !== undefined) {\r\n      image_name = files[0].name;\r\n      if (image_name.lastIndexOf('.') <= 0) {\r\n        return;\r\n      }\r\n      const fr = new FileReader();\r\n      fr.readAsDataURL(files[0]);\r\n      fr.addEventListener('load', () => {\r\n        setFile(files[0]);\r\n      });\r\n    }\r\n  };\r\n  const onFileUpload = async (e: any) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const response = await fetch('https://api.thecatapi.com/v1/images', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'x-api-key': 'fcf38302-dbb6-492d-9423-f4b9fc6a0e28',\r\n      },\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        <Redirect to='/' />;\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className='flex justify-center  items-center  h-screen'>\r\n        <div className=''>\r\n          <input type='file' onChange={onFileChange} />\r\n          <button onClick={onFileUpload}>Upload!</button>{' '}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","C:\\localhost\\cat\\src\\reducers\\FavReducers.tsx",[],"C:\\localhost\\cat\\src\\actions\\Fav\\ActionsFavPostDel.tsx",[],"C:\\localhost\\cat\\src\\App.tsx",["62"],"C:\\localhost\\cat\\src\\actions\\ActionsVoteUpDown.tsx",[],"C:\\localhost\\cat\\src\\reducers\\Root\\RootReducers.tsx",[],"C:\\localhost\\cat\\src\\actions\\Fav\\ActionsFav.tsx",[],"C:\\localhost\\cat\\src\\reportWebVitals.js",[],"C:\\localhost\\cat\\src\\actions\\ActionsGetCats.tsx",[],{"ruleId":"63","severity":1,"message":"64","line":26,"column":11,"nodeType":"65","messageId":"66","endLine":26,"endColumn":16},{"ruleId":"63","severity":1,"message":"67","line":58,"column":9,"nodeType":"65","messageId":"66","endLine":58,"endColumn":22},{"ruleId":"63","severity":1,"message":"68","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":13},{"ruleId":"63","severity":1,"message":"69","line":11,"column":10,"nodeType":"65","messageId":"66","endLine":11,"endColumn":18},{"ruleId":"63","severity":1,"message":"70","line":11,"column":20,"nodeType":"65","messageId":"66","endLine":11,"endColumn":29},{"ruleId":"63","severity":1,"message":"71","line":36,"column":11,"nodeType":"65","messageId":"66","endLine":36,"endColumn":19},{"ruleId":"63","severity":1,"message":"72","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":12},"@typescript-eslint/no-unused-vars","'IMain' is defined but never used.","Identifier","unusedVar","'getAddedVotes' is assigned a value but never used.","'axios' is defined but never used.","'selected' is assigned a value but never used.","'setUpload' is assigned a value but never used.","'response' is assigned a value but never used.","'logo' is defined but never used."]